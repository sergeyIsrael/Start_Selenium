plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.testng', name: 'testng', version: '7.4.0'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    implementation 'ch.qos.logback:logback-classic:1.2.11'

}

test {
    useTestNG()
}
// для управления из terminal
task mytest(type: Test) {
    useTestNG(){
        def groups = System.getProperty('groups')
        if(groups != null){
            includeGroups groups
        }
//     (def - define - определи) парсим строку, если что придёт записываем в suite, если ничего, оставляем "".
        def suite = System.getProperty("suite", "")
        if(suite.equals("reg")) {
//            Copy Path/Reference > path from repository root
            suites "src/test/resources/registr.xml"
        } else if (suite.equals("add")) {
            suites "src/test/resources/add.xml"
        } else if (suite.equals('negative')){
            suites 'src/test/resources/negative.xml'
        } else {
            suites 'src/test/resources/testng.xml'
        }
    }
//    считывает слово browser из terminal и его значение (chrome, firefox) передаёт в конструктор AppManager
//    в классе TestBase, оттуда в сам class AppManager и вызывается конкретный browser
    if(project.hasProperty('browser'))
        systemProperty 'browser', '$browser'
}